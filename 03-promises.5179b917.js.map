{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,UAC5BE,MAAOH,SAASC,cAAc,qBAC9BG,KAAMJ,SAASC,cAAc,oBAC7BI,OAAQL,SAASC,cAAc,uBAyBnC,SAASK,EAAcC,EAAUJ,GAC7B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACHH,EACAF,EAAQ,CAAEF,WAAUJ,UAGpBO,EAAO,CAAEH,WAAUJ,YAExBA,MAhCXL,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAoBC,GAChBA,EAAEC,iBAKF,IAJA,IAAMC,EAAQC,OAAOrB,EAAKK,MAAMiB,OAC1BhB,EAAOe,OAAOrB,EAAKM,KAAKgB,OACxBf,EAASc,OAAOrB,EAAKO,OAAOe,OAEzBC,EAAI,EAAGA,GAAKhB,EAAQgB,GAAK,EAAG,CAGjCf,EAAce,EAFIH,EAAQd,EAAOiB,GAG5BC,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MACf,OAAOP,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANvB,EAAM,UAEvEwB,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAChB,OAAOP,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANvB,EAAM,c","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n    form: document.querySelector('.form'),\n    btn: document.querySelector('button'),\n    delay: document.querySelector('input[name=delay]'),\n    step: document.querySelector('input[name=step]'),\n    amount: document.querySelector('input[name=amount]'),\n}\n\nrefs.form.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n    e.preventDefault();\n    const delay = Number(refs.delay.value);\n    const step = Number(refs.step.value);\n    const amount = Number(refs.amount.value);\n\n    for (let i = 1; i <= amount; i += 1) {\n        const timeDelay = delay + step * i;\n\n        createPromise(i, timeDelay)\n            .then(({ position, delay }) => {\n                return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n    }\n\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n\n            } else {\n                reject({ position, delay })\n            }\n        }, delay);\n    });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btn","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5179b917.js.map"}